{"version":3,"sources":["Components/Form.js","Components/ToDo.js","Components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","toDos","setToDos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","ToDo","toDo","map","item","filter","el","ToDoList","filteredToDos","App","useState","status","setFilteredToDos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c1b466.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText,toDos,setToDos,inputText,setStatus}) => {\r\n  const inpuTextHandler = (e) =>{\r\n    setInputText(e.target.value)\r\n  }\r\n  const submitToDoHandler = (e) =>{\r\n    e.preventDefault();\r\n    setToDos([...toDos,{text: inputText,completed: false,id:Math.random()*1000},]);\r\n    setInputText(\"\");\r\n  }\r\n  const statusHandler = (e) =>{\r\n    setStatus(e.target.value);\r\n  }\r\n    return (\r\n        <form>\r\n        <input value={inputText} onChange={inpuTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitToDoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst ToDo = ({text,toDo, toDos,setToDos}) => {\r\n    const deleteHandler = () => {\r\n        setToDos(toDos.filter(el=> el.id!== toDo.id))\r\n    }\r\n    const completeHnadler = () =>{\r\n        setToDos(toDos.map((item)=>{\r\n            if(item.id === toDo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                };\r\n            };\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${toDo.completed ? \"completed\": \"\"}`}>{text}</li>\r\n            <button onClick={completeHnadler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\nconst ToDoList = ({toDos,setToDos,filteredToDos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filteredToDos.map(toDo =>(\r\n                        <ToDo setToDos={setToDos} toDos={toDos} toDo={toDo} key={toDo.id} text={toDo.text} id={toDo.id}></ToDo>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport ToDoList from './Components/ToDoList';\n\nfunction App() {\n \n  const [inputText, setInputText] = useState(\"\");\n  const [toDos,setToDos] = useState([]);\n  const [status,setStatus] = useState(\"All\");\n  const [filteredToDos,setFilteredToDos] = useState([]);\n  useEffect(()=>{\n    filterHandler();\n  },[toDos,status]);\n\n  const filterHandler =()=>{\n    switch(status){\n      case \"completed\":\n        setFilteredToDos(toDos.filter(toDo =>toDo.completed === true));\n        break;\n      case \"uncompleted\":\n      setFilteredToDos(toDos.filter(toDo =>toDo.completed === false));\n      break;\n      default:\n        setFilteredToDos(toDos);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"main_div\">\n      <h1 className=\"text-center mt-5\">Todo List</h1>\n      <Form setStatus={setStatus} inputText={inputText} toDos={toDos} setToDos={setToDos} setInputText={setInputText}></Form>\n      <ToDoList filteredToDos={filteredToDos} setToDos={setToDos} toDos={toDos}></ToDoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}